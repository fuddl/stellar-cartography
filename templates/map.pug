include concentric
include label
include centroid
include teko-label

mixin line(locations)
  - var points = '';
  each location in locations
    if catalog[location]
      - points += ' ' + catalog[location].coordinates.x + ',' + catalog[location].coordinates.y
      - bgattributes = [];
      each key, value in attributes
        - bgattributes[key] = key != 'stroke-dasharray' ? value : '';
      polyline(points=points, stroke="black", stroke-width=".2", fill="none")&attributes(bgattributes)
      polyline(points=points, stroke="white", stroke-width=".1", fill="none")&attributes(attributes)


- function pcToLj(p) { return p * 3.26156; }

doctype html
html
  head
    meta(charset="utf-8")
  body
    svg(xmlns='http://www.w3.org/2000/svg', viewBox='-800 -800 1800 1800', height="20000" width="20000")

      style.
        @import url('https://fonts.googleapis.com/css?family=Teko:300,400,500,600,700');
        text {
          font-family: 'Teko', sans-serif;
          stroke: black;
          stroke-width: .2;
          paint-order: stroke;
          stroke-miterlimit: 2;
          stroke-linecap: round;
          fill: white;
        }
        body {
          background-color: black;
        }
      +concentric-grid(cx=0 cy=-26200 min-r=26112 r=26332.5 concentric-subdivisions=10, radial-subdivisions=14 stroke="white" stroke-width=.15/4, min-arc=89.755 max-arc=90.355, opacity=.25)
      
      +concentric-grid(cx=catalog.CNB.Maynard.coordinates.x cy=catalog.CNB.Maynard.coordinates.y min-r=0 r=pcToLj(190) concentric-subdivisions=24, radial-subdivisions=24 stroke="#193980" stroke-width=.15/4, opacity=.5)
      g#quadrant-border
        - var x = 22;
        line(x1=x, x2=x, y1="-26200" y2="10000", stroke="#fff", stroke-width=".1", stroke-dasharray="2,.5") 

      each star, key in stars
        - var x = star[2] * 3.26156;
        - var y = star[3] * 3.26156;
        if x > -800 && x < 1800 && y > -800 && y < 1800
          if star[0]
            //circle(cx=x, cy=y, r=.2, fill="#333")
            //text(x=x, y=y, fill="#333", font-size='.5')= star[0] 
          else 
            //circle(cx=x, cy=y, r=.1, fill="#333")

      each thing, key in catalog
        if thing.outline
          path(d=thing.outline, fill="url(#dots-1)")
          
          //-+circular-marker-area(x=thing.coordinates.x, y=thing.coordinates.y,cx=catalog.CNB.coordinates.x, cy=catalog.CNB.coordinates.y, label=thing.label)
        
      each thing, key in catalog
        if !thing.outline
          //-+circular-marker(x=thing.coordinates.x, y=thing.coordinates.y, cx=catalog.CNB.coordinates.x, cy=catalog.CNB.coordinates.y)=thing.label.replace(/\([^\)]+\)/, '')
          if thing.coordinates
            - let weight = 300;
            - let direction = 'right';
            - let marker = 'circle';
            if thing.type == 'star'
              - weight = 700
            if thing.type == 'station'
              - weight = 500
              - direction = 'bottom'
              - marker = 'triangle'
            +teko-label(thing.coordinates.x, thing.coordinates.y, key, weight, direction, marker) 

