- var labelBoxes = [];

mixin box(box)
  path(d='M'+box[0]+','+box[1]+' H'+box[2]+' V'+box[3]+' H'+box[0]+' z', fill='red', opacity=.5)

mixin teko-label(x, y, text, weight, direction, marker, style)
  g
    - text = text.toUpperCase();
    - const zoom = .15;
    - const sizes = { 200: 14, 300: 11, 400: 9, 500: 8, 600: 7, 700: 5 };
    - const fontSize =  sizes[weight] * zoom;
    - const advance = fontAdvance(text, 'Teko/Teko-' + weight + '.ttf');
    - const width = (advance / 1000 * fontSize);
    - const cRadius = 2.5 * zoom;
    - const cStrokeWidth = .75 * zoom;
    - const textXOffset = 3 * zoom;
    - let textYOffset = -1.5 * zoom;
    - const hboxpadding = 1 * zoom;

    if direction == 's'
      - textYOffset = (fontSize + 10) * zoom;
    if direction == 'n'
      - textYOffset = (fontSize - 10) * zoom;
    if direction == 'se' || direction == 'sw'
      - textYOffset = -.25 * zoom;

    - const rCRadius = cRadius-cStrokeWidth;

    - let lineStartX = x+rCRadius;
    if direction == 'nw' ||  direction == 'sw'
      - lineStartX = x-rCRadius;

    - let lineEndX = x+width+(textXOffset*2)+rCRadius;
    if direction == 'nw' ||  direction == 'sw'
      - lineEndX = x-width-(textXOffset*2)-rCRadius;

    - let textX = x+cRadius+textXOffset;
    
    if direction == 'nw' || direction == 'sw'
      - textX = x-cRadius-textXOffset;

    if direction == 's' || direction == 'n'
      - textX = x;

    - let textY = y+textYOffset;
    if direction == 'se' || direction == 'sw'
      - textY = y+textYOffset+fontSize*.8;
    
    - let textAnchor = '';
    if direction == 'nw' || direction == 'sw'
      - textAnchor = 'end';

    if direction == 's' || direction == 'n'
      - textAnchor = 'middle';

  
    - let box = [textX, textY-(fontSize*.75)-hboxpadding, textX+width, textY];
    if textAnchor == 'end'
      - box = [textX-width, textY-(fontSize*.75)-hboxpadding, textX, textY];
    if textAnchor == 'middle'
      - box = [textX-(width/2), textY-(fontSize*.75)-hboxpadding, textX, textY];

    
    if intersect(labelBoxes, [box]).length == 0
      - labelBoxes.push(box);


      - var markerBox = [x-rCRadius-cStrokeWidth, y-rCRadius-cStrokeWidth,x+rCRadius+cStrokeWidth, y+rCRadius+cStrokeWidth];
      if intersect(labelBoxes, [markerBox]).length == 0
        - labelBoxes.push(markerBox);
      //-+box(box)
      //-+box(markerBox)
      if marker == 'circle'
        circle(cx=x, cy=y, r=rCRadius, stroke-width=cStrokeWidth, stroke="white")&attributes(attributes)

      if marker == 'triangle'
        - let dzoom = zoom - .05
        - let d = 'M' + x + ',' + y + ' m0,' + (-4*dzoom) + ' l' + (-4*dzoom) + ',' + (7*dzoom) + ' l' + (8*dzoom) + ',0 z';
        path(d=d, fill="white")

      if marker == 'diamond'
        - let dzoom = zoom - .05
        - let d = 'M' + x + ',' + y + ' m0,' + (-3.5*dzoom) + ' l' + (-4*dzoom) + ',' + (4*dzoom) + ' l' + (4*dzoom) + ',' + (4*dzoom) + ' l' + (4*dzoom) + ',' + (-4*dzoom) + ' z';
        path(d=d, fill="white")

      if direction == 'ne' || direction == 'nw' || direction == 'se' || direction == 'sw'
        line(x1=lineStartX,y1=y,x2=lineEndX, y2=y, stroke="white", stroke-width=cStrokeWidth)

      text.label(x=textX, y=textY, width=width, font-size=fontSize, font-weight=weight, text-anchor=textAnchor, font-style=style)= text
      
    else if direction == 'ne'
      //+box(box)
      +teko-label(x, y, text, weight, 'se', marker, style)

    else if direction == 'se'
      //+box(box)
      +teko-label(x, y, text, weight, 'nw', marker, style)
    else if direction == 'nw'
      //+box(box)
      +teko-label(x, y, text, weight, 'sw', marker, style)
    else if direction == 's'
      //+box(box)
      +teko-label(x, y, text, weight, 'n', marker, style)